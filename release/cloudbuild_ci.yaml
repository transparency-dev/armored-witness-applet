steps:
  ### Build the Trusted Applet, create a detached signature for it, and upload both to GCS.
  # Build an image containing the trusted applet artifacts with the Dockerfile.
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - --build-arg
      - TAMAGO_VERSION=${_TAMAGO_VERSION}
      - -t
      - builder-image
      # Path is relative to the root of the repo.
      - .
  # Prepare a container with a copy of the artifacts.
  - name: gcr.io/cloud-builders/docker
    args:
      - create
      - --name
      - builder_scratch
      - builder-image
  # Copy the artifacts from the container to the Cloud Build VM.
  - name: gcr.io/cloud-builders/docker
    args:
      - cp
      - builder_scratch:/build/bin
      - output
  # List the artifacts.
  - name: bash
    args:
      - ls
      - output
  # Sign the built applet.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - asymmetric-sign
      - --digest-algorithm
      - sha256
      - --version
      - ${_KMS_KEY_VERSION}
      - --key
      - ${_KMS_KEY}
      - --keyring
      - ${_KMS_KEYRING}
      - --location
      - ${_REGION}
      - --input-file
      - output/trusted_applet.elf
      - --signature-file
      - output/trusted_applet.sig
  # Copy the artifacts from the Cloud Build VM to GCS.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/trusted_applet.elf
      - gs://${_TRUSTED_APPLET_BUCKET}/${_TEST_TAG_NAME}/trusted_applet.elf
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/trusted_applet.sig
      - gs://${_TRUSTED_APPLET_BUCKET}/${_TEST_TAG_NAME}/trusted_applet.sig
  ### Construct log entry / Claimant Model statement.
  # Copy trusted_applet.elf to prepare Docker context.
  - name: bash
    args:
      - cp
      - output/trusted_applet.elf
      - release/json_constructor/
  # Build an image with the log entry in JSON format.
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - --build-arg
      - GIT_TAG=${_TEST_TAG_NAME}
      - --build-arg
      - GIT_COMMIT_FINGERPRINT=${COMMIT_SHA}
      - --build-arg
      - FIRMWARE_FILE=trusted_applet.elf
      - --build-arg
      - TAMAGO_VERSION=${_TAMAGO_VERSION}
      - -t
      - json-constructor-image
      - release/json_constructor/
  # Prepare a container with a copy of the JSON artifact.
  - name: gcr.io/cloud-builders/docker
    args:
      - create
      - --name
      - json_scratch
      - json-constructor-image
  # Copy the JSON artifact from the container to the Cloud Build VM.
  - name: gcr.io/cloud-builders/docker
    args:
      - cp
      - json_scratch:/app/output.json
      - output/applet_log_entry.json
  # Print the content of the JSON artifact.
  - name: bash
    args:
      - cat
      - output/applet_log_entry.json
  ### Write the firmware release to the transparency log.
  # Copy log entry to the sequence bucket, preparing to write to log.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/applet_log_entry.json
      - 'gs://${_LOG_NAME}/${_ENTRIES_DIR}/applet_log_entry.json'
  # Sequence log entry.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - functions
      - call
      - sequence
      - '--data'
      - '{"entriesDir": "${_ENTRIES_DIR}", "origin": "${_ORIGIN}", "bucket": "${_LOG_NAME}"}'
  # Integrate log entry.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - functions
      - call
      - integrate
      - '--data'
      - '{"origin": "${_ORIGIN}", "bucket": "${_LOG_NAME}"}'
substitutions:
  # Build-related.
  _TRUSTED_APPLET_BUCKET: trusted-applet-artifacts-ci
  _TAMAGO_VERSION: '1.20.6'
  _TEST_TAG_NAME: '0.1.2'
  # Signing-related.
  _REGION: europe-west2
  _KMS_KEY: trusted-applet-ci
  _KMS_KEYRING: armored-witness
  _KMS_KEY_VERSION: '1'
  # Log-related.
  _ENTRIES_DIR: firmware-log-sequence
  _ORIGIN: transparency.dev/armored-witness/firmware_transparency/ci/0
  _LOG_NAME: firmware-log-ci
