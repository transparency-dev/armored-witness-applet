steps:
  ### Build the Trusted Applet and upload it to GCS.
  # Build an image containing the trusted applet artifacts with the Dockerfile.
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - --build-arg
      - TAMAGO_VERSION=${_TAMAGO_VERSION}
      - -t
      - builder-image
      # Path is relative to the root of the repo.
      - .
  # Prepare a container with a copy of the artifacts.
  - name: gcr.io/cloud-builders/docker
    args:
      - create
      - --name
      - builder_scratch
      - builder-image
  # Copy the artifacts from the container to the Cloud Build VM.
  - name: gcr.io/cloud-builders/docker
    args:
      - cp
      - builder_scratch:/build/bin
      - output
  # List the artifacts.
  - name: bash
    args:
      - ls
      - output
  # Copy the artifacts from the Cloud Build VM to GCS.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/trusted_applet.elf
      - gs://${_FIRMWARE_BUCKET}/${_FIRMWARE_COMPONENT}/${TAG_NAME}/trusted_applet.elf
  ### Construct log entry / Claimant Model statement.
  - name: golang
    args:
      - go
      - get
      - github.com/transparency-dev/armored-witness/cmd/manifest
  - name: golang
    args:
      - go
      - run
      - github.com/transparency-dev/armored-witness/cmd/manifest
      - create
      - --git_tag=${TAG_NAME}
      - --git_commit_fingerprint=${COMMIT_SHA}
      - --firmware_file=output/trusted_applet.elf
      - --firmware_type=TRUSTED_APPLET
      - --tamago_version=${_TAMAGO_VERSION}
      - --raw
      - --output_file=output/trusted_applet_manifest_unsigned.json
  # Sign the log entry.
  - name: golang
    args:
      - go
      - get
      - github.com/transparency-dev/armored-witness/cmd/sign
  - name: golang
    args:
      - go
      - run
      - github.com/transparency-dev/armored-witness/cmd/sign
      - --project_name=${PROJECT_ID}
      - --key_ring=${_KMS_KEYRING}
      - --key_name=${_KMS_KEY}
      - --key_version=${_KMS_KEY_VERSION}
      - --key_location=${_REGION}
      - --manifest_file=output/trusted_applet_manifest_unsigned.json
      - --output_file=output/trusted_applet_manifest
  # Print the content of the signed manifest.
  - name: bash
    args:
      - cat
      - output/trusted_applet_manifest
  ### Copy the signed manifest to the public artifacts bucket.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/trusted_applet_manifest
      - gs://${_FIRMWARE_BUCKET}/${_FIRMWARE_COMPONENT}/${TAG_NAME}/trusted_applet_manifest
  ### Write the firmware release to the transparency log.
  # Copy the log entry to the sequence bucket, preparing to write to log.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/trusted_applet_manifest
      - gs://${_LOG_NAME}/${_ENTRIES_DIR}/trusted_applet_manifest
  # Sequence log entry.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - functions
      - call
      - sequence
      - '--data'
      - '{"entriesDir": "${_ENTRIES_DIR}", "origin": "${_ORIGIN}", "bucket": "${_LOG_NAME}"}'
  # Integrate log entry.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - functions
      - call
      - integrate
      - '--data'
      - '{"origin": "${_ORIGIN}", "bucket": "${_LOG_NAME}"}'
substitutions:
  # Build-related.
  _FIRMWARE_BUCKET: armored-witness-firmware
  _FIRMWARE_COMPONENT: trusted-applet
  _TAMAGO_VERSION: '1.20.6'
  # Signing-related.
  _REGION: europe-west2
  _KMS_KEY: trusted-applet
  _KMS_KEYRING: armored-witness
  _KMS_KEY_VERSION: '1'
  # Log-related.
  _ENTRIES_DIR: firmware-log-sequence
  _ORIGIN: transparency.dev/armored-witness/firmware_transparency/prod/0
  _LOG_NAME: armored-witness-firmware-log
