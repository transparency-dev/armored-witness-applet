steps:
  # Build an image containing the trusted applet artifacts with the Dockerfile.
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - --build-arg
      - TAMAGO_VERSION=${_TAMAGO_VERSION}
      - -t
      - builder-image
      - .
  # Prepare a container with a copy of the artifacts.
  - name: gcr.io/cloud-builders/docker
    args:
      - create
      - --name
      - scratch
      - builder-image
  # Copy the artifacts from the container to the Cloud Build VM.
  - name: gcr.io/cloud-builders/docker
    args:
      - cp
      - scratch:/build/bin
      - output
  # List the artifacts.
  - name: bash
    args:
      - ls
      - output
  # Sign the built applet.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - asymmetric-sign
      - --digest-algorithm
      - sha256
      - --version
      - ${_KMS_KEY_VERSION}
      - --key
      - ${_KMS_KEY}
      - --keyring
      - ${_KMS_KEYRING}
      - --location
      - ${_REGION}
      - --input-file
      - output/trusted_applet.elf
      - --signature-file
      - output/trusted_applet.sig
  # Copy the artifacts from the Cloud Build VM to GCS.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/trusted_applet.elf
      - gs://${_TRUSTED_APPLET_BUCKET}/${TAG_NAME}/trusted_applet.elf
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/trusted_applet.sig
      - gs://${_TRUSTED_APPLET_BUCKET}/${TAG_NAME}/trusted_applet.sig
  # Construct log entry / Claimant Model statement.
  # TODO(jayhou): replace this with a more programmatic JSON construction. `firmware_digest_sha256`
  # should be in base64 instead of hex.
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo -e "{\n  \"component\": \"TRUSTED_APPLET\",\n  \"git_tag_name\": \"${TAG_NAME}\",\n  \"git_commit_fingerprint\": \"${COMMIT_SHA}\",\n  \"firmware_digest_sha256\": \"$(sha256sum -b output/trusted_applet.elf | cut -d ' ' -f1)\",\n  \"tamago_version\": \"${_TAMAGO_VERSION}\"\n}" > output/applet_log_entry
  # Copy log entry to the sequence bucket, preparing to write to log.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - output/applet_log_entry
      - 'gs://${_LOG_NAME}/${_ENTRIES_DIR}/applet_log_entry'
  # Sequence log entry.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - functions
      - call
      - sequence
      - '--data'
      - '{"entriesDir": "${_ENTRIES_DIR}", "origin": "${_ORIGIN}", "bucket": "${_LOG_NAME}"}'
  # Integrate log entry.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - functions
      - call
      - integrate
      - '--data'
      - '{"origin": "${_ORIGIN}", "bucket": "${_LOG_NAME}"}'
substitutions:
  # Build-related.
  _ARTIFACT_REGISTRY_REPO: trusted-applet-builder
  _REGION: europe-west2
  _TRUSTED_APPLET_BUCKET: trusted-applet-artifacts
  _TAMAGO_VERSION: '1.20.6'
  # Signing-related.
  _KMS_KEY: trusted-applet
  _KMS_KEYRING: armored-witness
  _KMS_KEY_VERSION: '1'
  # Log-related.
  _ENTRIES_DIR: firmware-log-sequence
  _ORIGIN: transparency.dev/armored-witness/binary_transparency/0
  _LOG_NAME: firmware-log